{"version":3,"sources":["App.js","redux/actions/actions.js","reportWebVitals.js","redux/reducers/add-del-reducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["App","data","useSelector","state","add_del_reducers","list","dispatch","useDispatch","useState","listItem","setListItem","editorNot","seteditorNot","inputFocus","useRef","useEffect","localStorage","setItem","JSON","stringify","className","type","name","id","value","onChange","e","target","ref","placeholder","autoComplete","onClick","length","payload","current","focus","alert","Date","getTime","add_item","map","val","index","style","cursor","color","transform","updatedData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_ITEM","DELETE_ITEM","EDIT_ITEM","UPDATED","initialState","idForEdit","rootReducer","combineReducers","action","filterArr","filter","objIndex","findIndex","obj","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.774c9b15.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  add_item,\n  delete_item,\n  edit_item,\n  updated,\n} from \"./redux/actions/actions\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nfunction App() {\n  const data = useSelector((state) => state.add_del_reducers.list);\n  const dispatch = useDispatch();\n  const [listItem, setListItem] = useState(\"\");\n  const [editorNot, seteditorNot] = useState(false);\n  const inputFocus = useRef(\"\");\n\n  // adding data to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(listItem));\n  }, [listItem]);\n  return (\n    <>\n      <div className=\"black top\"></div>\n      <div className=\"black center\"></div>\n      <div className=\"black bottom\"></div>\n      <div className=\"App\">\n        <div className=\"heading\">\n          <h1>React Redux Todo App</h1>\n        </div>\n        <div className=\"inputFields\">\n          <input\n            type=\"text\"\n            name=\"item\"\n            id=\"text\"\n            value={listItem}\n            onChange={(e) => setListItem(e.target.value)}\n            ref={inputFocus}\n            placeholder=\"Type sonething here...\"\n            autoComplete=\"off\"\n          />\n          {!editorNot ? (\n            <button\n              className=\"addBtn common\"\n              onClick={() => {\n                if (listItem.length >= 3) {\n                  dispatch(add_item(listItem));\n                  setListItem(\" \");\n                  inputFocus.current.focus();\n                } else {\n                  alert(\"Value Must be greater then 3 character\");\n                }\n              }}\n            >\n              <AddCircleOutlineIcon />\n            </button>\n          ) : (\n            <button\n              className=\"editBtn common\"\n              onClick={() => {\n                if (listItem.length >= 3) {\n                  seteditorNot(false);\n                  dispatch(updated(listItem));\n                  setListItem(\" \");\n                  inputFocus.current.focus();\n                } else {\n                  alert(\"Value Must be greater then 3 character\");\n                }\n              }}\n            >\n              <CheckCircleOutlineIcon />\n            </button>\n          )}\n        </div>\n        <div className=\"allLists\">\n          <div className=\"allItmes_wrapper\">\n            <ul>\n              {data.map((val, index) => {\n                //displaying all the lists with map\n                return (\n                  <div className={`listWrapper${index + 1} listWrapper`}>\n                    <li className={`item${index + 1} item`}>\n                      <div className=\"item\">\n                        <p>{val.data}</p>{\" \"}\n                      </div>\n                      <EditIcon\n                        style={{\n                          cursor: \"pointer\",\n                          color: \"green\",\n                          transform: \"scale(0.8)\",\n                        }}\n                        onClick={() => {\n                          dispatch(edit_item(val.id));\n                          setListItem(val.data, listItem);\n                          seteditorNot(true);\n                          inputFocus.current.focus();\n                        }}\n                      />\n                      <DeleteForeverIcon\n                        style={{\n                          cursor: \"pointer\",\n                          color: \"red\",\n                          transform: \"scale(0.8)\",\n                        }}\n                        onClick={() => dispatch(delete_item(val.id))}\n                      />\n                    </li>\n                  </div>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const ADD_ITEM = \"ADD_ITEM\";\r\nconst DELETE_ITEM = \"DELETE_ITEM\";\r\nconst EDIT_ITEM = \"EDIT_ITEM\";\r\nconst UPDATED = \"UPDATED\";\r\nconst add_item = (data) => {\r\n  return {\r\n    type: ADD_ITEM,\r\n    payload: {\r\n      id: new Date().getTime(),\r\n      data: data,\r\n    },\r\n  };\r\n};\r\nconst delete_item = (id, updatedData) => {\r\n  return {\r\n    type: DELETE_ITEM,\r\n    payload: {\r\n      id,\r\n      updatedData,\r\n    },\r\n  };\r\n};\r\n//working on edit feature\r\nconst edit_item = (id) => {\r\n  return {\r\n    type: EDIT_ITEM,\r\n    payload: {\r\n      id, //is id ke zaarurat updated action ko pary ge bad ma\r\n    },\r\n  };\r\n};\r\nconst updated = (updatedVal) => {\r\n  return {\r\n    type: UPDATED,\r\n    payload: {\r\n      data: updatedVal,\r\n    },\r\n  };\r\n};\r\nexport { add_item, delete_item, edit_item, updated };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_ITEM = \"ADD_ITEM\";\r\nconst DELETE_ITEM = \"DELETE_ITEM\";\r\nconst EDIT_ITEM = \"EDIT_ITEM\";\r\nconst UPDATED = \"UPDATED\";\r\nconst initialState = {\r\n  list: [],\r\n};\r\nlet idForEdit = 0;\r\nconst add_del_reducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ITEM:\r\n      // return Object.assign({}, state, {\r\n      //   contacts: [\r\n      //     ...state.list,\r\n      //     { data: action.payload.data, id: action.payload.id },\r\n      //   ],\r\n      // });\r\n      return {\r\n        list: [\r\n          ...state.list,\r\n          {\r\n            id: action.payload.id,\r\n            data: action.payload.data,\r\n          },\r\n        ],\r\n      };\r\n    case DELETE_ITEM:\r\n      const filterArr = state.list.filter(\r\n        (val) => val.id !== action.payload.id\r\n      );\r\n      return {\r\n        list: filterArr,\r\n      };\r\n    case EDIT_ITEM:\r\n      idForEdit = action.payload.id; //ya jo id lakr arha h isko ham global krrhy ha taka updateed reducer ka waqt ham is id ka use karty huay apna content match krky usko ko specificaly update karaky\r\n      return {\r\n        list: state.list,\r\n      };\r\n    case UPDATED:\r\n      const objIndex = state.list.findIndex((obj) => obj.id === idForEdit); //goood logic to update specific element\r\n      // console.log(\"Before update: \", state.list[objIndex]);\r\n      state.list[objIndex].data = action.payload.data;\r\n      // console.log(\"After update: \", state.list[objIndex]);\r\n      return {\r\n        list: state.list,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport { add_del_reducers };\r\n","import { combineReducers } from \"redux\";\r\nimport { add_del_reducers } from \"./add-del-reducer\";\r\n\r\nconst rootReducer = combineReducers({ add_del_reducers });\r\nexport { rootReducer };\r\n","import { rootReducer } from \"./reducers/rootReducer\";\r\nimport { createStore } from \"redux\";\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}